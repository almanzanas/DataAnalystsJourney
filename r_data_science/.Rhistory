df[["Cost"]]
cat("\n")
df[["Co", exact=FALSE]]
df[, c("Who", "Paid")]
df[, "Who"]
df[, "Who", drop=FALSE]
sapply (df, class)
df2 <- data.frame (
Age = c(35, 24, 42, 63, 56, 66),
Spouse = c(31, 36, 40, 59, 60, 60),
Gender = c("F", "F", "M", "F", "M", "M")
)
split (df2$Age, df2$Gender)
cat("\nUsing sapply() to obtain the mean by gender :\n")
sapply (split (df2$Age, df2$Gender), mean)
round( tapply(df2$Age, df2$Gender, mean), 3 )
split (df2, df2$Gender)
cat("\nSummary differencing Gender: \n")
lapply ( split (df2, df2$Gender), summary )
cat("\nLet's see what happens with sapply: \n")
sapply ( split (df2, df2$Gender), summary )
by ( df2, df2$Gender, summary )
subset ( df, Paid == TRUE)
# Is the alternative to:
df[ df$Paid == TRUE, ]
?transform
cat("Nested: \n")
cos (log (sqrt (8 - 3) ) )
cat("\nUsing pipes: \n")
(8 - 3) %>% sqrt %>% log %>% cos
install.packages("magrittr")
cat("Nested: \n")
cos (log (sqrt (8 - 3) ) )
library("magrittr")
cat("\nUsing pipes: \n")
(8 - 3) %>% sqrt %>% log %>% cos
cat("Nested: \n")
cos (log (sqrt (8 - 3) ) )
library("magrittr")
cat("\nUsing pipes: \n")
(8 - 3) %>% sqrt %>% log %>% cos
cat("\nBuilt in pipes |> : \n")
(8 - 3) |> sqrt |> log |> cos
cat("Nested: \n")
cos (log (sqrt (8 - 3) ) )
library("magrittr")
cat("\nUsing pipes: \n")
(8 - 3) %>% sqrt %>% log %>% cos
cat("\nBuilt in pipes |> : \n")
(8 - 3) |> sqrt() |> log |> cos
cat("Nested: \n")
cos (log (sqrt (8 - 3) ) )
library("magrittr")
cat("\nUsing pipes: \n")
(8 - 3) %>% sqrt %>% log %>% cos
help(|>)
help("|>")
# First '0' will be converted into origin date.
dd <- as.Date ( c(0, 18250:18253), origin = "1970-01-01" )
# First '0' will be converted into origin date.
dd <- as.Date ( c(0, 18250:18253), origin = "1970-01-01" )
dd
# First '0' will be converted into origin date.
dd <- as.Date ( c(0, 18251:18255), origin = "1970-01-01" )
dd
# First '0' will be converted into origin date.
dd <- as.Date ( c(0, 18252:18255), origin = "1970-01-01" )
dd
?as.Date
?strptime
as.Date ( c("Feb 29, 2016", "Feb 29, 2017"), format = "%b %d, %Y" )
as.Date ( c("Feb 29, 2016", "Feb 29, 2017", "September 30, 2017"),
format = "%b %d, %Y" )
Sys.getlocale()
sp.dt <- c("3 octubre 2016", "26 Marzo 2017")
( dts <- as.Date (sp.dt, format = "%d %B %Y") )
# Changing locales to spanish:
Sys.setlocale ("LC_TIME", "Spanish")
( dts <- as.Date (sp.dt, format = "%d %B %Y") )
# Changing back:
Sys.setlocale ("LC_TIME", "UK")
# Using as.character() to get english dates:
as.character (dts, "%d %B %Y")
sp.dt <- c("3 octubre 2016", "26 Marzo 2017")
( dts <- as.Date (sp.dt, format = "%d %B %Y") )
# Changing locales to spanish:
Sys.setlocale ("LC_TIME", "Spanish")
( dts <- as.Date (sp.dt, format = "%d %B %Y") )
# Changing back:
Sys.setlocale ("LC_TIME", "UK")
dt1 <- as.Date ("2024/05/17")
dt2 <- as.Date ("2024-07-03")
# Extracting weekdays:
weekdays( c(dt1, dt2) )
cat("\n")
# Extracting month name:
months( c(dt1, dt2), abbreviate = T )
cat("\n")
# Identifying Quarters:
quarters( c(dt1, dt2) )
cat("\n")
format ( c(dt1, dt2), "%y")
format ( c(dt1, dt2), "%d")
format ( c(dt1, dt2), "%A, %B %d, %Y")
cat(dt1, "plus 30: \n")
dt1 + 30
cat("\nDifference between date1 and date2: \n")
(dd <- dt2 - dt1)
cat("\n")
as.numeric (dd)
units(dd)
cat("\nTo numeric but in weeks: \n")
as.numeric (dd, units="weeks")
cat("Date1 adding 30 days: \n")
dt1 + 30
cat("\nDifference between date1 and date2: \n")
(dd <- dt2 - dt1)
cat("\n")
as.numeric (dd)
units(dd)
cat("\nTo numeric but in weeks: \n")
as.numeric (dd, units="weeks")
cat("Date1 adding 30 days: \n")
dt1 + 30
cat("\nDifference between date1 and date2: \n")
(dd <- dt2 - dt1)
cat("\nDifference to numeric: \n")
as.numeric (dd)
units(dd)
cat("\nTo numeric but in weeks: \n")
as.numeric (dd, units="weeks")
(ready <- as.POSIXlt("2017-01-17 14:51:23"))
cat("\n")
unlist (ready)
cat("\n")
as.numeric(ready["mday"])
(ready <- as.POSIXlt("2017-01-17 14:51:23"))
cat("\n")
unlist (ready)
cat("\n")
ready["mday"]
(ready <- as.POSIXlt("2017-01-17 14:51:23"))
cat("\n")
unlist (ready)
cat("\n")
ready
(ready <- as.POSIXlt("2017-01-17 14:51:23"))
cat("\n")
unlist (ready)
cat("\n")
unlist (ready)["mday"]
(ready <- as.POSIXlt("2017-01-17 14:51:23"))
cat("\n")
unlist (ready)
cat("\n")
( mdayn <- as.numeric(unlist (ready)["mday"]) )
( ct1 <- as.POSIXct ("Mar 31, 2017 10:26:08 pm",
format = "%b %d, %Y %I:%M:%S %p") )
cat("\n")
(ct2 <- as.POSIXct ("2017-04-01 05:26:08", tz = "UTC"))
cat("\nLooking for diferences: \n")
as.numeric (ct1 - ct2, units = "secs")
( ct1 <- as.POSIXct ("Mar 31, 2017 10:26:08 pm",
format = "%b %d, %Y %I:%M:%S %p", tz = "PDT") )
cat("\n")
(ct2 <- as.POSIXct ("2017-04-01 05:26:08", tz = "UTC"))
cat("\nLooking for diferences: \n")
as.numeric (ct1 - ct2, units = "secs")
( ct1 <- as.POSIXct ("Mar 31, 2017 10:26:08 pm",
format = "%b %d, %Y %I:%M:%S %p") )
cat("\n")
(ct2 <- as.POSIXct ("2017-04-01 05:26:08", tz = "UTC"))
cat("\nLooking for diferences: \n")
as.numeric (ct1 - ct2, units = "secs")
( ct1 <- as.POSIXct ("Mar 31, 2017 10:26:08 pm",
format = "%b %d, %Y %I:%M:%S %p") )
cat("\n")
(ct2 <- as.POSIXct ("2017-04-01 01:26:08", tz = "UTC"))
cat("\nLooking for diferences: \n")
as.numeric (ct1 - ct2, units = "secs")
( ct1 <- as.POSIXct ("Mar 31, 2017 11:26:08 pm",
format = "%b %d, %Y %I:%M:%S %p") )
cat("\n")
(ct2 <- as.POSIXct ("2017-03-31 10:26:08", tz = "UTC"))
cat("\nLooking for diferences: \n")
as.numeric (ct1 - ct2, units = "secs")
( ct1 <- as.POSIXct ("Mar 31, 2017 11:26:08 pm",
format = "%b %d, %Y %I:%M:%S %p") )
cat("\n")
(ct2 <- as.POSIXct ("2017-03-31 22:26:08", tz = "UTC"))
cat("\nLooking for diferences: \n")
as.numeric (ct1 - ct2, units = "secs")
( ct1 <- as.POSIXct ("Mar 31, 2017 11:26:08 pm",
format = "%b %d, %Y %I:%M:%S %p") )
cat("\n")
(ct2 <- as.POSIXct ("2017-03-31 21:26:08", tz = "UTC"))
cat("\nLooking for diferences: \n")
as.numeric (ct1 - ct2, units = "secs")
c(ct1, ct2)
cat("\n")
weekdays(c(ct1, ct2))
cat("\n")
weekdays(ct2)
( ct1 <- as.POSIXct ("Jun 1, 2017 00:26:08 pm",
format = "%b %d, %Y %I:%M:%S %p") )
cat("\n")
(ct2 <- as.POSIXct ("2017-03-31 22:26:08", tz = "UTC"))
cat("\nLooking for diferences: \n")
as.numeric (ct1 - ct2, units = "secs")
( ct1 <- as.POSIXct ("Jun 01, 2017 00:26:08 pm",
format = "%b %d, %Y %I:%M:%S %p") )
cat("\n")
(ct2 <- as.POSIXct ("2017-03-31 22:26:08", tz = "UTC"))
cat("\nLooking for diferences: \n")
as.numeric (ct1 - ct2, units = "secs")
( ct1 <- as.POSIXct ("June 01, 2017 00:26:08 pm",
format = "%b %d, %Y %I:%M:%S %p") )
cat("\n")
(ct2 <- as.POSIXct ("2017-03-31 22:26:08", tz = "UTC"))
cat("\nLooking for diferences: \n")
as.numeric (ct1 - ct2, units = "secs")
( ct1 <- as.POSIXct ("June 01, 2017 00:26:08 pm",
format = "%B %d, %Y %I:%M:%S %p") )
cat("\n")
(ct2 <- as.POSIXct ("2017-03-31 22:26:08", tz = "UTC"))
cat("\nLooking for diferences: \n")
as.numeric (ct1 - ct2, units = "secs")
( ct1 <- as.POSIXct ("Jun 1, 2017 00:26:08 am",
format = "%b %d, %Y %I:%M:%S %p") )
cat("\n")
(ct2 <- as.POSIXct ("2017-03-31 22:26:08", tz = "UTC"))
cat("\nLooking for diferences: \n")
as.numeric (ct1 - ct2, units = "secs")
( ct1 <- as.POSIXct ("June 1, 2017 00:26:08 am",
format = "%b %d, %Y %I:%M:%S %p") )
cat("\n")
(ct2 <- as.POSIXct ("2017-03-31 22:26:08", tz = "UTC"))
cat("\nLooking for diferences: \n")
as.numeric (ct1 - ct2, units = "secs")
( ct1 <- as.POSIXct ("June 01, 2017 00:26:08 am",
format = "%b %d, %Y %I:%M:%S %p") )
cat("\n")
(ct2 <- as.POSIXct ("2017-03-31 22:26:08", tz = "UTC"))
cat("\nLooking for diferences: \n")
as.numeric (ct1 - ct2, units = "secs")
( ct1 <- as.POSIXct ("Apr 1, 2017 00:26:08 am",
format = "%b %d, %Y %I:%M:%S %p") )
cat("\n")
(ct2 <- as.POSIXct ("2017-03-31 22:26:08", tz = "UTC"))
cat("\nLooking for diferences: \n")
as.numeric (ct1 - ct2, units = "secs")
( ct1 <- as.POSIXct ("April 1, 2017 00:26:08 am",
format = "%B %d, %Y %I:%M:%S %p") )
cat("\n")
(ct2 <- as.POSIXct ("2017-03-31 22:26:08", tz = "UTC"))
cat("\nLooking for diferences: \n")
as.numeric (ct1 - ct2, units = "secs")
( ct1 <- as.POSIXct ("April 01, 2017 00:26:08 am",
format = "%B %d, %Y %I:%M:%S %p") )
cat("\n")
(ct2 <- as.POSIXct ("2017-03-31 22:26:08", tz = "UTC"))
cat("\nLooking for diferences: \n")
as.numeric (ct1 - ct2, units = "secs")
( ct1 <- as.POSIXct ("Mar 30, 2017 00:26:08 am",
format = "%b %d, %Y %I:%M:%S %p") )
cat("\n")
(ct2 <- as.POSIXct ("2017-03-29 21:26:08", tz = "UTC"))
cat("\nLooking for diferences: \n")
as.numeric (ct1 - ct2, units = "secs")
( ct1 <- as.POSIXct ("Mar 30, 2017 12:26:08 am",
format = "%b %d, %Y %I:%M:%S %p") )
cat("\n")
(ct2 <- as.POSIXct ("2017-03-29 21:26:08", tz = "UTC"))
cat("\nLooking for diferences: \n")
as.numeric (ct1 - ct2, units = "secs")
( ct1 <- as.POSIXct ("Mar 30, 2017 12:26:08 am",
format = "%b %d, %Y %I:%M:%S %p") )
cat("\n")
(ct2 <- as.POSIXct ("2017-03-29 22:26:08", tz = "UTC"))
cat("\nLooking for diferences: \n")
as.numeric (ct1 - ct2, units = "secs")
c(ct1, ct2)
cat("\n")
weekdays(c(ct1, ct2))
cat("\n")
weekdays(ct2)
gc()
as.date(ct2)
as.Date(ct2)
as.Date(ct2)
as.Date(ct1)
(crdt <- date() )
cat("\n")
(now <- as.POSIXct (crdt, format = "%A %B %d %H:%M:%S %Y" ) )
cat("\n")
as.Date (now)
diff ( range( c(ct1, ct2) ) )
seq ( as.Date("2020-03-11"), by = 3, length = 5 )
cat("\n")
pdt <- as.POSIXct( ("2020-03-11" 13:05:00) )
seq ( as.Date("2020-03-11"), by = 3, length = 5 )
cat("\n")
pdt <- as.POSIXct( ("2020-03-11 13:05:00") )
seq ( pdt, by = 2, length = 3)
cat("\nSequence by days:\n")
seq (pdt, by = "day", length = 3)
cat("\nBy day without altering the hour: \n")
seq (pdt, by = "DSTday", length = 3)
d1 <- as.POSIXct ("2017-05-01 12:00:00")
d2 <- as.POSIXct ("2017-05-01 12:00:06")
d3 <- as.POSIXct ("2017-05-07 12:00:00")
cat("Are equal (d2 - d1) and (d3 - d1) ? :\n")
(d2 - d1) == (d3 - d1)
cat("\nSame operation but using as.numeric() : \n")
as.numeric(d2 - d1) == as.numeric(d3 - d1)
cat("\nSame as.numeric but with units=days:\n")
as.numeric(d2 - d1, units="days") == as.numeric(d3 - d1, units="days")
c(d1, NA)
cat("\n")
c(NA, d1)
cat("\n")
c( as.Date(NA), d1)
cat("\n")
c( as.POSIXct(NA), d1)
dt.df <- data.frame(
Start = as.Date ( c(seq ("2020-05-03", by="months", length = 6) ) )
)
dt.df <- data.frame(
Start = c( seq (as.Date("2020-05-03"), by="months", length = 6) ) )
)
dt.df <- data.frame(
Start = c( seq (as.Date("2020-05-03"), by="months", length = 6) )
)
# Creating a new column
dt.df$End <- c( seq (as.Date("2021-06-02"), by="months", length = 6) ) )
dt.df <- data.frame(
Start = c( seq (as.Date("2020-05-03"), by="months", length = 6) )
)
# Creating a new column
dt.df$End <- c( seq (as.Date("2021-06-02"), by="months", length = 6) )
dt.df
sapply ( nrow(dt.df),
function (i) as.numeric (dt.df[i,2] - dt.df[i,1],
units = "days") )
sapply ( 1:nrow(dt.df),
function (i) as.numeric (dt.df[i,2] - dt.df[i,1],
units = "days") )
(
c(d1, NA)
cat("\n")
c(d1, NA)
cat("\n")
c(NA, d1)
cat("\n")
c( as.Date(NA), d1)
cat("\n")
c( as.POSIXct(NA), d1)
c(d1, NA)
cat("\n")
c(NA, d1)
cat("\n")
c( as.Date(NA), d1)
cat("\n")
c( as.POSIXct(NA), d1)
?intersection
intersection( names(df), names(df2) )
intersect( names(df), names(df2) )
names(df)
names(df2)
intersect( names(df), names(df2) )
names(df)
names(df2)
df2$Paid <- c(NA,NA,NA,NA,NA)
names(df)
names(df2)
df2$Paid <- c(NA,NA,NA,NA,NA,NA)
intersect( names(df), names(df2) )
View(df)
edit(df)
data.entry(df)
df2$Paid <- 101:106
df2&Date <- rep (as.Date ("2024-02-05"), by="months", length=6)
df2$Date <- rep (as.Date ("2024-02-05"), by="months", length=6)
df2
( col.cls <- sapply(df2, function (x) class (x)[1] ) )
table(col.cls)
df2$Spouse[3] <- NA
df2$Paid[5] <- NA
df2$Paid[6] <- NA
df2$Date[2] <- NA
df2$Age[4] <- -56
sapply( df2, function(x) sum(is.na(x) ) )
sapply( df2, function(x) sum(is.na(x) ) ) |> table()
sapply( df2, function (x) sum (x < 0, na.rm = TRUE) )
sapply (df2[, match(col.cls, c("numeric", "integer") ) ], c(range, mean, median, sd) )
sapply (df2[, match(col.cls, c("numeric", "integer") ) ], function(x) %in% c(range(x), mean(x), median(x), sd(x) ) )
sapply (df2[, match(col.cls, c("numeric", "integer") ) ], function(x) c(range(x), mean(x), median(x), sd(x) ) )
sapply (df2[, match(col.cls, c("numeric", "integer") ) ], range ) )
sapply (df2[, match(col.cls, c("numeric", "integer") ) ], range )
sapply (df2[, col.cls %in% c("numeric", "integer") ], range )
sapply (df2[, col.cls %in% c("numeric", "integer"), na.rm=TRUE ], range )
sapply (df2[, col.cls %in% c("numeric", "integer") ], range, na.rm=TRUE )
sapply (df2[, col.cls %in% c("numeric", "integer") ], range, mean, na.rm=TRUE )
sapply (df2[, col.cls %in% c("numeric", "integer") ], list(mean, range), na.rm=TRUE )
sapply (df2[, col.cls %in% c("numeric", "integer") ], range, na.rm=TRUE )
sapply(df2, function(x) length(unique(na.omit(x) ) ) )
writers <- c("Asimov", "Tolstoi", "Wolf", "Joice", NA, "Abercrombie")
length(writers)
nchar(writers)
cat(
length(writers),
nchar(writers)
)
cat(
length(writers),"\n",
nchar(writers)
)
cat(
length(writers),"\n",
nchar(writers),
sep=""
)
length(writers)
nchar(writers)
( quo <- "She wrote, \"To enter a 'new-line,' type \"\\n\" .\"" )
nchar (quo)
cat(quo, "\n")
blanks <- c (" ", " ", "", "   ", "", "2016", "", " 2016", "2016", "   ")
length(blanks)
table(blanks)
names(table(blanks))
nzchar(blanks)
blanks <- c (" ", " ", "", "   ", "", "2016", "", " 2016", "2016", "   ")
length(blanks)
table(blanks)
names(table(blanks))
nzchar(blanks)
noblanks <- trimws(blanks)
blanks[nzchar(blanks)]
blanks <- c (" ", " ", "", "   ", "", "2016", "", " 2016", "2016", "   ")
length(blanks)
table(blanks)
names(table(blanks))
nzchar(blanks)
noblanks <- trimws(blanks)
blanks[nzchar(noblanks)]
blanks <- c (" ", " ", "", "   ", "", "2016", "", " 2016", "2016", "   ")
length(blanks)
table(blanks)
names(table(blanks))
nzchar(blanks)
noblanks <- trimws(blanks)
blanks[nzchar(noblanks)]
names(table(noblanks))
blanks <- c (" ", " ", "", "   ", "", "2016", "", " 2016", "2016", "   ")
length(blanks)
table(blanks)
names(table(blanks))
nzchar(blanks)
# Removing white spaces located in the start or end of a element:
noblanks <- trimws(blanks)
table(noblanks)
names(table(noblanks))
dt1 <- "2017-02-03"
# Extracting the year
substring(dt1, 1, 4)
# Extracting day and month (last five characters)
substring (nchar(dt) - 4)
dt1 <- "2017-02-03"
# Extracting the year
substring(dt1, 1, 4)
# Extracting day and month (last five characters)
substring (dt1, nchar(dt1) - 4)
nchar(dt1)
nchar(dt1) -4
substring(dt1, 6)
substring(dt1, 1, 5)
substring(dt1, 1:nchar(dt1), 1:nchar(dt1) )
substring(dt1, 1:nchar(dt1), 1:nchar(dt1) )
strsplit(dt1)
?strsplit
substring(dt1, 1:nchar(dt1), 1:nchar(dt1) )
strsplit(dt1, split = "")
substring(dt1, 1:nchar(dt1), 1:nchar(dt1) )
strsplit(dt1, split = NULL)
month.name
weekdays.name
weekdays
holid <- month.name
substring (holid[6:8], nchar(holid[6:8]) ) <- "_vac"
holid[5:9]
holid <- month.name
substring (holid[6:8], nchar(holid[6:8]) - 3 ) <- "_vac"
holid[5:9]
holid <- month.name
substring (holid[6:8], nchar(holid[6:8]) - 1 ) <- "VA"
holid[5:9]
holid <- month.name
substring (holid[6:8], nchar(holid[6:8]) - 0 ) <- "9"
holid[5:9]
holid <- month.name
substring (holid[6:8], nchar(holid[6:8] + 3) - 0 ) <- "9"
holid <- month.name
substring (holid[6:8], nchar(holid[6:8]) - 0 ) <- "9"
holid[5:9]
?casefold
.simpleCap <- function(x) {
s <- strsplit(x, " ")[[1]]
paste(toupper(substring(s, 1, 1)), substring(s, 2),
sep = "", collapse = " ")
}
.simpleCap("the quick red fox jumps over the lazy brown dog")
